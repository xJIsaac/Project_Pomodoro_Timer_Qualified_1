{"ast":null,"code":"var _jsxFileName = \"/Users/jaimemoreno/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusTime, setFocusTime] = useState(3000);\n  const [breakTime, setBreakTime] = useState(3000);\n  const [session, setSession] = useState({\n    sessionTime: focusTime + breakTime,\n    remainingTime: () => this.isFocusing ? this.focusT : this.breakT,\n    focusT: () => this.sessionTime - breakTime,\n    breakT: this.sessionTime,\n    //break: breakTime,\n    isFocusing: () => this.remainingTime > breakTime ? true : false\n  });\n  const display = {\n    remainingTime: session.phase === \"focus\" ? session.focus : session.break,\n    message: session.phase === \"focus\" ? \"Focusing\" : \"On Break\",\n    setTime: session.phase === \"focus\" ? focusTime : breakTime\n  };\n\n  function playAudio() {\n    new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n  }\n  /*\n  function reduceTimer(focus) {\n    if (focus) {\n      setSession({ ...session, focus: session.focus - 1000 });\n    }\n    console.log(session);\n    switch (expression) {\n      case value1:\n        //Statements executed when the\n        //result of expression matches value1\n        [break;]\n      case value2:\n        //Statements executed when the\n        //result of expression matches value2\n        [break;]\n      ...\n      case valueN:\n        //Statements executed when the\n        //result of expression matches valueN\n        [break;]\n      [default:\n        //Statements executed when none of\n        //the values match the value of the expression\n        [break;]]\n    }\n  }\n  */\n\n\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    if (isTimerRunning) {\n      setSession({ ...session,\n        sessionTime: session.sessionTime - 1000\n      });\n      console.log(session.sessionTime);\n    }\n    /*\n    if (session.focus && isTimerRunning) {\n      setSession({\n        ...session,\n        focus: session.focus - 1000,\n      });\n      console.log(\"Focus Timer: \" + session.focus);\n    } else if (session.break && isTimerRunning) {\n      \n      setSession({\n        ...session,\n        break: session.break - 1000,\n      });\n      console.log(\"Break Timer: \" + session.break);\n    } else {\n      \n      setSession({\n        focus: 3000,\n        break: 3000,\n      });\n    }\n    */\n\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  function runSession() {\n    if (session.focus) {\n      setSession({ ...session,\n        focus: session.focus - 1000\n      });\n    } else if (!session.focus) {\n      console.log(\"break session\");\n      setSession({ ...session,\n        phase: session.phase = \"break\"\n      });\n      setSession({ ...session,\n        break: session.break - 1000\n      });\n      console.log(session.break);\n    }\n\n    console.log(session.break);\n  }\n\n  function handleStopClick() {\n    if (isTimerRunning) {\n      setIsTimerRunning(false);\n      console.log(\"you clicked stop\");\n      setSession({\n        focus: focusTime,\n        break: breakTime\n      });\n    }\n  }\n\n  function handleFocusTimeChange(action) {\n    if (!isTimerRunning) {\n      action === \"increase\" ? setFocusTime(Math.min(focusTime + 300000, 3600000)) : setFocusTime(Math.max(focusTime - 300000, 1000 * 60 * 5));\n    }\n  }\n\n  function handleBreakTimeChange(action) {\n    if (!isTimerRunning) {\n      action === \"increase\" ? setBreakTime(Math.min(breakTime + 1000 * 60, 1000 * 60 * 15)) : setBreakTime(Math.max(breakTime - 60000, 60000));\n    }\n  }\n\n  function toMinAndSec(ms) {\n    var min = Math.floor(ms / 60000);\n    var sec = (ms % 60000 / 1000).toFixed(0);\n    return min + \":\" + (sec < 10 ? \"0\" : \"\") + sec;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", toMinAndSec(focusTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: () => handleFocusTimeChange(\"decrease\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: () => handleFocusTimeChange(\"increase\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", toMinAndSec(breakTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: () => handleBreakTimeChange(\"decrease\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: () => handleBreakTimeChange(\"increase\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: handleStopClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, display.message, \" for \", toMinAndSec(display.setTime), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, toMinAndSec(session.remainingTime), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/jaimemoreno/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","Pomodoro","isTimerRunning","setIsTimerRunning","focusTime","setFocusTime","breakTime","setBreakTime","session","setSession","sessionTime","remainingTime","isFocusing","focusT","breakT","display","phase","focus","break","message","setTime","playAudio","Audio","play","console","log","playPause","prevState","runSession","handleStopClick","handleFocusTimeChange","action","Math","min","max","handleBreakTimeChange","toMinAndSec","ms","floor","sec","toFixed","oi","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusTime, setFocusTime] = useState(3000);\n  const [breakTime, setBreakTime] = useState(3000);\n  const [session, setSession] = useState({\n    sessionTime: focusTime + breakTime,\n    remainingTime: () => this.isFocusing ? this.focusT: this.breakT,\n    focusT: () => this.sessionTime - breakTime,\n    breakT: this.sessionTime, \n    //break: breakTime,\n    isFocusing: () => this.remainingTime > breakTime ? true: false,\n\n  });\n\n  const display = {\n    remainingTime: session.phase === \"focus\" ? session.focus : session.break,\n    message: session.phase === \"focus\" ? \"Focusing\" : \"On Break\",\n    setTime: session.phase === \"focus\" ? focusTime : breakTime,\n  };\n\n  function playAudio() {\n    new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n  }\n\n  /*\n  function reduceTimer(focus) {\n    if (focus) {\n      setSession({ ...session, focus: session.focus - 1000 });\n    }\n    console.log(session);\n    switch (expression) {\n      case value1:\n        //Statements executed when the\n        //result of expression matches value1\n        [break;]\n      case value2:\n        //Statements executed when the\n        //result of expression matches value2\n        [break;]\n      ...\n      case valueN:\n        //Statements executed when the\n        //result of expression matches valueN\n        [break;]\n      [default:\n        //Statements executed when none of\n        //the values match the value of the expression\n        [break;]]\n    }\n  }\n  */\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      if (isTimerRunning) {\n        setSession({\n          ...session,\n          sessionTime: session.sessionTime - 1000,\n        });\n        console.log(session.sessionTime)\n      }\n      /*\n      if (session.focus && isTimerRunning) {\n        setSession({\n          ...session,\n          focus: session.focus - 1000,\n        });\n        console.log(\"Focus Timer: \" + session.focus);\n      } else if (session.break && isTimerRunning) {\n        \n        setSession({\n          ...session,\n          break: session.break - 1000,\n        });\n        console.log(\"Break Timer: \" + session.break);\n      } else {\n        \n        setSession({\n          focus: 3000,\n          break: 3000,\n        });\n      }\n      */\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  function runSession() {\n    if (session.focus) {\n      setSession({\n        ...session,\n        focus: session.focus - 1000,\n      });\n    } else if (!session.focus) {\n      console.log(\"break session\");\n      setSession({\n        ...session,\n        phase: (session.phase = \"break\"),\n      });\n      setSession({\n        ...session,\n        break: session.break - 1000,\n      });\n      console.log(session.break);\n    }\n    console.log(session.break);\n  }\n\n  function handleStopClick() {\n    if (isTimerRunning) {\n      setIsTimerRunning(false);\n      console.log(\"you clicked stop\");\n      setSession({\n        focus: focusTime,\n        break: breakTime,\n      });\n    }\n  }\n\n  function handleFocusTimeChange(action) {\n    if (!isTimerRunning) {\n      action === \"increase\"\n        ? setFocusTime(Math.min(focusTime + 300000, 3600000))\n        : setFocusTime(Math.max(focusTime - 300000, 1000 * 60 * 5));\n    }\n  }\n\n  function handleBreakTimeChange(action) {\n    if (!isTimerRunning) {\n      action === \"increase\"\n        ? setBreakTime(Math.min(breakTime + 1000 * 60, 1000 * 60 * 15))\n        : setBreakTime(Math.max(breakTime - 60000, 60000));\n    }\n  }\n\n  function toMinAndSec(ms) {\n    var min = Math.floor(ms / 60000);\n    var sec = ((ms % 60000) / 1000).toFixed(0);\n    return min + \":\" + (sec < 10 ? \"0\" : \"\") + sec;\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {toMinAndSec(focusTime)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={() => handleFocusTimeChange(\"decrease\")}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={() => handleFocusTimeChange(\"increase\")}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {toMinAndSec(breakTime)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={() => handleBreakTimeChange(\"decrease\")}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={() => handleBreakTimeChange(\"increase\")}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={handleStopClick}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">\n              {display.message} for {toMinAndSec(display.setTime)} minutes\n            </h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {toMinAndSec(session.remainingTime)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}